{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","prevName","name","currentName","props","debug","clearInterval","clockName","className","Component","getRandomName","value","now","toString","App","isClockVisible","handleContextMenu","e","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAQ,IAAIC,KAElB,EAAKK,SAAS,CAAEN,UAGhBO,QAAQC,KAAKR,EAAMS,cAAcC,OAAO,IAAK,MAC5C,OAfP,gCAkBE,SAAmBC,GACjB,IAAcC,EAAaD,EAAnBE,KACMC,EAAgBX,KAAKY,MAA3BF,KAEJD,IAAaE,GAEfP,QAAQS,MAAR,uBAA8BJ,EAA9B,eAA6CE,MAxBnD,kCA4BE,WACEV,OAAOa,cAAcd,KAAKD,WA7B9B,oBAgCE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACMkB,EAAcf,KAAKY,MAAzBF,KAER,OACE,sBAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAGF,YAED,sBAAMC,UAAU,cAAhB,SACGnB,EAAMS,cAAcC,OAAO,IAAK,YA7C3C,GAA2BU,aCN3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAQX,IAAMG,EAAb,4MACE1B,MAAQ,CACNmB,UAAW,UACXQ,gBAAgB,GAHpB,EAoBEC,kBAAoB,SAACC,GACnBA,EAAEC,iBACF,EAAKvB,SAAS,CAAEoB,gBAAgB,KAtBpC,EAyBEI,YAAc,WACZ,EAAKxB,SAAS,CAAEoB,gBAAgB,KA1BpC,uDAME,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAe7B,KAAKwB,mBAC9CI,SAASC,iBAAiB,QAAS7B,KAAK2B,aAExC1B,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEY,UAAWG,QAC1B,QAZP,kCAeE,WACEU,SAASE,oBAAoB,cAAe9B,KAAKwB,mBACjDI,SAASE,oBAAoB,QAAS9B,KAAK2B,eAjB/C,oBA6BE,WACE,MAAsC3B,KAAKJ,MAAnCmB,EAAR,EAAQA,UAAWQ,EAAnB,EAAmBA,eAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GACC,cAAC,EAAD,CAAOb,KAAMK,WApCvB,GAAyBE,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.22275dd9.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState({ today });\n\n      // eslint-disable-next-line no-console\n      console.info(today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { name: prevName } = prevProps;\n    const { name: currentName } = this.props;\n\n    if (prevName !== currentName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name: clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  isClockVisible: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    isClockVisible: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleContextMenu = (e: MouseEvent) => {\n    e.preventDefault();\n    this.setState({ isClockVisible: false });\n  };\n\n  handleClick = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}