{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","prevName","clockName","currentName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","isClockVisible","contextMenuHandler","e","preventDefault","clickHandler","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAQ,IAAIC,KAElB,EAAKK,SAAS,CAAEN,UAGhBO,QAAQC,KAAKR,EAAMS,cAAcC,OAAO,IAAK,MAC5C,OAfP,gCAkBE,SAAmBC,GACjB,IAAmBC,EAAaD,EAAxBE,UACWC,EAAgBX,KAAKY,MAAhCF,UAEJD,IAAaE,GAEfP,QAAQS,MAAR,uBAA8BJ,EAA9B,eAA6CE,MAxBnD,kCA4BE,WACEV,OAAOa,cAAcd,KAAKD,WA7B9B,oBAgCE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAa,EAAcV,KAAKY,MAAnBF,UAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGlB,EAAMS,cAAcC,OAAO,IAAK,YA7C3C,GAA2BS,aCN3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAQX,IAAMG,EAAb,4MACEzB,MAAQ,CACNc,UAAW,UACXY,gBAAgB,GAHpB,EAoBEC,mBAAqB,SAACC,GACpBA,EAAEC,iBACF,EAAKtB,SAAS,CAAEmB,gBAAgB,KAtBpC,EAyBEI,aAAe,WACb,EAAKvB,SAAS,CAAEmB,gBAAgB,KA1BpC,uDAME,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAe5B,KAAKuB,oBAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,cAExCzB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEO,UAAWO,QAC1B,QAZP,kCAeE,WACEU,SAASE,oBAAoB,cAAe7B,KAAKuB,oBACjDI,SAASE,oBAAoB,QAAS7B,KAAK0B,gBAjB/C,oBA6BE,WACE,MAAsC1B,KAAKJ,MAAnCc,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,eAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CAEEO,GAAkB,cAAC,EAAD,CAAOZ,UAAWA,WApC9C,GAAyBM,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.e8178770.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState({ today });\n\n      // eslint-disable-next-line no-console\n      console.info(today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { clockName: prevName } = prevProps;\n    const { clockName: currentName } = this.props;\n\n    if (prevName !== currentName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  isClockVisible: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    isClockVisible: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.contextMenuHandler);\n    document.addEventListener('click', this.clickHandler);\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.contextMenuHandler);\n    document.removeEventListener('click', this.clickHandler);\n  }\n\n  contextMenuHandler = (e: MouseEvent) => {\n    e.preventDefault();\n    this.setState({ isClockVisible: false });\n  };\n\n  clickHandler = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {\n          isClockVisible && <Clock clockName={clockName} />\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}